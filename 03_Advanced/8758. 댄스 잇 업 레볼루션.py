'''
가영은 최근 다이어트를 위해 오락실에 있는 "댄스 잇 업 레볼루션"이라는 게임을 시작했습니다.
댄스 잇 업 레볼루션은 리듬에 맞추어 화면에 나오는 화살표와 같은 위치의 발판을 밟는 게임입니다.

댄스 잇 업 레볼루션은 상하좌우 발판을 사용합니다.
편의상 좌측을 1, 하단을 2, 상단을 3, 우측을 4라고 하겠습니다.

가영은 댄스 잇 업 레볼루션을 더 잘하고 싶었기에 댄스 잇 업 레볼루션 동네 고수 나영에게 잘할 수 있는 방법을 물어보았습니다.
나영은 나오는 화살표를 "번갈아 밟는 것"이 중요하다고 말했습니다.

예를 들어서 버튼이 [1, 2, 4, 2, 1] 과 같은 식으로 나올 때
가영은 그동안 오른발을 끌어서 [왼발, 오른발, 오른발, 오른발, 왼발]로 밟고 있었습니다.

하지만 몸을 오른쪽으로 돌려서 4번을 왼발로 밟게 된다면
[왼발, 오른발, 왼발, 오른발, 왼발]이 되어 조금 더 안정적으로 밟을 수 있게 된다는 것이었습니다.

또 하나의 예시를 들자면 [1, 3, 4, 2]와 같은 패턴의 경우 역시
왼쪽(정확히는 왼쪽으로 135°)을 보고 [오른발, 왼발, 오른발, 왼발]로 밟으면 자연스럽게 밟을 수 있게 됩니다.

이렇게 발을 이동할 때는 항상 작은 쪽의 각도로 움직입니다.
예를 들어서, [1, 2, 4]의 경우 [왼발, 오른발, 왼발]로 밟을 수 있는데,
시계방향으로 몸을 돌리면 45°를 움직여야 하지만 반시계방향으로 몸을 돌리면 315°를 움직여야 합니다.
따라서 저런 패턴은 시계방향으로 몸을 움직여야 합니다.

나영은 대부분의 패턴을 이렇게 밟을 수 있지만, 정말 가끔씩 그렇지 못한 채보도 있다고 설명했습니다.
예를 들어서 [1, 3, 4, 2, 1, 3]의 경우에는 왼발로 시작하든 오른발로 시작하든 몸이 한 바퀴 돌게 됩니다.
댄스 잇 업 레볼루션은 뒤의 봉을 잡고 플레이하는 것이 일반적이기 때문에 위 패턴을 밟으려면 봉을 잠시 놓고 한 바퀴 돌던가,
가영이 원래 해왔던 것처럼 어느 구간을 끌어서 밟는 방법 밖에는 없습니다.

가영은 이런 패턴에 대해 분석해보기 위해 다음과 같은 규칙을 세웠습니다.

- 정면을 바라봤을 때의 시선과 현재 발 위치에 맞춰 섰을 때의 시선이 이루는 각도가 180°를 초과하면 이 패턴은 번갈아 밟을 수 없는 패턴입니다.
예를 들어 왼발의 위치가 2에 있고 오른발의 위치가 4에 있는 경우는 왼쪽으로 45°를 보고 있는 것이고,
왼발의 위치가 3, 오른발의 위치가 1이라면 오른쪽으로 135°를 보고 있는 것입니다. 

가영의 궁금증을 해결해 줄 프로그램을 작성하세요. 
------------------------------------------------------------------------
[입력값 설명]
『첫 번째 줄에 패턴의 길이를 의미하는 자연수 N이 주어집니다. (3 ≤ N ≤ 20)
두 번째 줄에 N개의 자연수가 공백으로 구분되어 주어집니다.
각각의 자연수는 1, 2, 3, 4 중에 하나이며, 같은 자연수가 연속으로 주어지지 않습니다.』

[출력값 설명]
『첫 번째 줄에 주어진 패턴이 번갈아 밟을 수 있는 패턴이라면 "OK", 그렇지 않다면 "NG"를 출력합니다.』
------------------------------------------------------------------------
예제 입력1
5
1 2 4 2 1

예제 출력1
OK

예제 입력2
6
1 3 4 2 1 3

예제 출력2
NG
'''
# 1,3,4 OK 고, 2,5,6,7 NG 임
# 좌측을 1, 하단을 2, 상단을 3, 우측을 4
'''
 3
1 4
 2
'''
# -*- coding: utf-8 -*-
import sys
input = sys.stdin.readline

# NG에 3123 추가 시 테케 4번 Fail 5번 Pass -> 231231 이 되면 4, 5 번 경우가 나뉨
def judge(lst):
    # 한바퀴 도는건 1,2,4,3 이거나 1,3,4,2 가 순서대로 나오는 경우
    NG = ['1243', '2431', '4312', '3124', '231231',
          '1342', '3421', '4213', '2134']
    # + 연속으로 같은 숫자일 경우
    for i in range(N-1):
        if lst[i] == lst[i+1]: return 'NG'
    
    for l in NG:
        if l in lst:
            return 'NG'
    return 'OK'

if __name__ == "__main__":
    N = int(input())
    pattern = input().rstrip().replace(' ', '')
    
    print(judge(pattern))
