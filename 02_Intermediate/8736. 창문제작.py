'''명수는 창문을 제작하는 장인입니다. 

명수는 창문을 N개 만들어달라는 의뢰를 받았습니다. 



한 개의 창문을 제작하기 위해서는 정확히 하나의 창틀과 하나의 유리가 필요합니다. 



명수는 창문을 만들기 위해서 재료를 구매하려고 알아보던 중, 상인 예준을 만났습니다.



명수는 예준과 두 가지의 거래를 할 수 있습니다.



1. 1개의 창틀을 a개의 창틀로 교환한다. (1개의 창틀을 잃고, a개의 창틀을 얻는다)

2. b개의 창틀을 1개의 유리로 교환한다. (y개의 창틀을 잃고, 1개의 유리를 얻는다)



한 번의 거래에는 상기된 두 가지의 거래 중 원하는 거래 하나만 진행할 수 있습니다. 



명수는 N개의 창문을 만들기 위해 이 거래를 이용하기로 결심하였습니다. 



명수는 처음에 1개의 창틀을 가지고 있고 최소한의 거래로 N개의 창문을 만들 재료를 모으려고 합니다. 



a와 b가 주어질 때, 

명수가 N개의 창문을 만들기 위해 필요한 최소한의 거래 횟수를 구하는 프로그램을 작성하세요. 



이때, 명수가 N개의 창문을 만드는 것이 항상 가능한 입력만 주어집니다.


예제 입력1

3 2 8

예제 출력1

29

예제 입력2

1000000000 2 1000000000

예제 출력2

1000000001999999999


입력값 설명

만들어야 하는 창문의 개수 N, 예준의 거래 조건의 a, b가 공백으로 구분되어 주어집니다.
(2 ≤ N, a, b ≤ 1,000,000,000)

출력값 설명

명수가 N개의 창문을 만들기 위해 필요한 최소한의 거래 횟수를 출력합니다.'''
import sys
input = sys.stdin.readline

def minimum_trades(N, a, b):
    frames = 1  # 초기 창틀의 개수
    glasses = 0  # 초기 유리의 개수
    trades = 0  # 거래 횟수
    
    if (N + N*b - 1) % (a-1) == 0:
        trades_needed = ((N + N*b - 1) // (a-1))
    else :
        trades_needed = ((N + N*b - 1) // (a-1)) + 1
    
    frames += trades_needed* (a - 1)
    trades += trades_needed
    
    frames -= N * b
    glasses += N
    trades += N
    
    return trades

# 입력 처리
N, a, b = map(int, input().split())
print(minimum_trades(N, a, b))
