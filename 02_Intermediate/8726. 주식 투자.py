'''
철수는 주식 투자를 시작했습니다. 
주식 초보인 철수는 우선 주식을 1주만 사두고 N일 동안 가격을 지켜보기로 했습니다.

철수가 산 주식의 가격은 매일 100원이 오르거나 100원이 떨어집니다.

철수는 N일이 지났을 때 수익이 K원이 되는 경우의 수가 궁금해졌습니다. 
수익이란 N일 동안 발생한 주식 가격 변동의 합입니다.

예를 들어 N = 3, K = 100이라고 가정하겠습니다. 
발생할 수 있는 경우는 다음 3가지입니다.

1. [+100, +100, -100]
2. [+100, -100, +100]
3. [-100, +100, +100]

N일이 지났을 때, 
철수의 수익이 K원이 되는 경우의 수를 구하는 프로그램을 작성하세요.


예제 입력1

3 100

예제 출력1

3

예제 입력2

7 200

예제 출력2

0


입력값 설명

첫째 줄에 주식을 사고 지난 일 수 N과 철수의 수익 K가 공백으로 구분되어 주어집니다.
단, K는 100의 배수입니다. (N과 K는 양의 정수, 1 ≤ N ≤ 10, 100 ≤ K ≤ 1,000)

출력값 설명

첫째 줄에 철수의 수익이 K원이 되는 경우의 수를 출력합니다.
조건을 만족하는 경우가 없는 경우 0을 출력합니다.
'''
# -*- coding: utf-8 -*-
import sys
input = sys.stdin.readline

n, k = map(int, input().split())

dp = [[0] * 2001 for _ in range(n+1)]
dp[0][1000] = 1

for i in range(1, n + 1):
    for j in range(2001):
        # 주식 상승
        if j + 100 <= 2000:
            dp[i][j] += dp[i - 1][j + 100]
        # 주식 하락
        if j - 100 >= 0:
            dp[i][j] += dp[i - 1][j - 100]
        
print(dp[n][1000+k])